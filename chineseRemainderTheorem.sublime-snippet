<snippet>
	<content><![CDATA[
ll mulInv(ll a, ll b) {
    ll b0=b,x0=0,x1=1;
    if(b==1) return 1;
    while(a>1){
        ll q = a / b, amb = a % b;
        a = b; b = amb;
        ll xqx = x1 - q * x0;
        x1 = x0; x0 = xqx;
    }
    if(x1<0) x1 += b0;
    return x1;
}
 
ll chineseRemainder(vector<ll> nvec, vector<ll> avec) {
    // usage:
    //vector<int> nvec = { 3, 5, 7 };
    //vector<int> avec = { 2, 3, 2 };
    //cout << chineseRemainder(nvec,avec) << endl;

    // ll prod = std::reduce(std::execution::seq, n.begin(), n.end(), 1, [](ll a, ll b) { return a * b; });
    ll prod=1;
    for(auto it:nvec) prod*=it;
    ll sm = 0;
    for (ll i = 0; i < nvec.size(); i++) {
        ll p = prod / nvec[i];
        sm += avec[i] * mulInv(p, nvec[i])*p;
    }
    return sm % prod;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>chineseRemTheo</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
